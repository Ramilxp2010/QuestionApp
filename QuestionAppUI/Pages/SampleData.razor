@page "/SampleData"
@using QuestionAppUI.Data;
@inject ICategoryData _categoryData
@inject IStatusData _statusData
@inject IQuestionData _questionData
@inject IUserData _userData

<h3>Sample Data</h3>

@if (sampleDataCreated)
{
    <h4>Sample Data have been created</h4>
}
else
{
    <button class="btn btn-primary" @onclick="GenerateSampleData">Generate Sample Data</button>
}

@code {
    private bool sampleDataCreated = false;

    private async Task GenerateSampleData()
    {
        await CreateCategories();
        await CreateStatuses();
        await CreateUsers();
        await CreateQuestions();

        sampleDataCreated = true;
    }

    private async Task CreateQuestions()
    {
        var questions = await _questionData.GetAllQuestions();
        if (questions?.Count == 0)
        {
            var categories = await _categoryData.GetAllCategoies();
            var statuses = await _statusData.GetAllStatuses();
            foreach (var question in QuestionAppUI.Data.SampleData.SampleQuestions)
            {
                var user = await _userData.GetUserByIdentifier(question.Author.ObjectId);
                question.Author = new BasicUserModel(user);
                question.Status = statuses?.FirstOrDefault(x => x.Name == question.Status?.Name);
                question.Category = categories?.FirstOrDefault(x => x.Name == question.Category?.Name);
                await _questionData.CreateQuestion(question);
            }
        }

        return;
    }

    private async Task CreateUsers()
    {
        var users = await _userData.GetUsersAsync();
        if (users?.Count == 0)
        {
            foreach (var user in QuestionAppUI.Data.SampleData.SampleUsers)
            {
                await _userData.CreateUser(user);
            }
        }

        return;
    }

    private async Task CreateCategories()
    {
        var categories = await _categoryData.GetAllCategoies();
        if (categories?.Count == 0)
        {
            foreach (var categoty in QuestionAppUI.Data.SampleData.SampleCategories)
            {
                await _categoryData.CreateCategory(categoty);   
            }
        }

        return;
    }

    private async Task CreateStatuses()
    {
        var statuses = await _statusData.GetAllStatuses();
        if (statuses?.Count == 0)
        {
            foreach (var status in QuestionAppUI.Data.SampleData.SampleStatuses)
            {
                await _statusData.CreateStatus(status);
            }
        }

        return;
    }
}
